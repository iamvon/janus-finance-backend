version: "3.3"

networks:
  production:
    name: production

services:
  server:
    image: janus/server:latest
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - MONGODB_USER
      - MONGODB_PASS
      - MONGODB_DATABASE
      - MONGODB_IP
      - MONGODB_PORT
      - PORT
      - PROJECT_NAME
      - API_PREFIX
    networks:
      - production
    restart: always

  fetch-solana-token:
    build:
      context: ./
      dockerfile: Dockerfile
    image: fetch-solana-token
    container_name: fetch-solana-token
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGODB_USER
      - MONGODB_PASS
      - MONGODB_DATABASE
      - MONGODB_IP
      - MONGODB_PORT
      - PORT
      - PROJECT_NAME
      - API_PREFIX
    network_mode: "host"
    command: node ./cronJob/getSolanaToken.js
 
  fetch-wormhole-token:
    build:
      context: ./
      dockerfile: Dockerfile
    image: fetch-wormhole-token
    container_name: fetch-wormhole-token
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGODB_USER
      - MONGODB_PASS
      - MONGODB_DATABASE
      - MONGODB_IP
      - MONGODB_PORT
      - PORT
      - PROJECT_NAME
      - API_PREFIX
    network_mode: "host"
    command: node ./cronJob/getWormholeToken.js
  
  fetch-solana-meta:
    build:
      context: ./
      dockerfile: Dockerfile
    image: fetch-solana-meta
    container_name: fetch-solana-meta
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGODB_USER
      - MONGODB_PASS
      - MONGODB_DATABASE
      - MONGODB_IP
      - MONGODB_PORT
      - PORT
      - PROJECT_NAME
      - API_PREFIX
    network_mode: "host"
    command: node ./cronJob/getSolanaMeta.js
  
  get-aldrin-pool:
    build:
      context: ./
      dockerfile: Dockerfile
    image: get-aldrin-pool
    container_name: get-aldrin-pool
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGODB_USER
      - MONGODB_PASS
      - MONGODB_DATABASE
      - MONGODB_IP
      - MONGODB_PORT
      - PORT
      - PROJECT_NAME
      - API_PREFIX
    network_mode: "host"
    command: node ./cronJob/getAldrinPool.js
  
  get-orca-pool:
    build:
      context: ./
      dockerfile: Dockerfile
    image: get-orca-pool
    container_name: get-orca-pool
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGODB_USER
      - MONGODB_PASS
      - MONGODB_DATABASE
      - MONGODB_IP
      - MONGODB_PORT
      - PORT
      - PROJECT_NAME
      - API_PREFIX
    network_mode: "host"
    command: node ./cronJob/getOrcaPool.js
  
  get-raydium-pool:
    build:
      context: ./
      dockerfile: Dockerfile
    image: get-raydium-pool
    container_name: get-raydium-pool
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGODB_USER
      - MONGODB_PASS
      - MONGODB_DATABASE
      - MONGODB_IP
      - MONGODB_PORT
      - PORT
      - PROJECT_NAME
      - API_PREFIX
    network_mode: "host"
    command: node ./cronJob/getRaydiumPool.js
